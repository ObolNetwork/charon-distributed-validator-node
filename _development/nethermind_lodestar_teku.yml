version: "3.8"

# Override any defaults specified by `${FOO:-bar}` in `.env` with `FOO=qux`.
# ${VARIABLE:-default} evaluates to default if VARIABLE is unset or empty in the environment.
# ${VARIABLE-default} evaluates to default only if VARIABLE is unset in the environment.

services:
  #             _   _                         _           _
  #  _ __   ___| |_| |__   ___ _ __ _ __ ___ (_)_ __   __| |
  # | '_ \ / _ \ __| '_ \ / _ \ '__| '_ ` _ \| | '_ \ / _` |
  # | | | |  __/ |_| | | |  __/ |  | | | | | | | | | | (_| |
  # |_| |_|\___|\__|_| |_|\___|_|  |_| |_| |_|_|_| |_|\__,_|
  nethermind:
    image: nethermind/nethermind:${NETHERMIND_VERSION:-1.19.1}
    restart: unless-stopped
    ports:
      - ${NETHERMIND_PORT_P2P:-30303}:30303/tcp # P2P TCP
      - ${NETHERMIND_PORT_P2P:-30303}:30303/udp # P2P UDP
    command: |
      --config=${NETWORK:-goerli}
      --datadir=data
      --JsonRpc.Enabled=true
      --JsonRpc.JwtSecretFile="/root/jwt/jwt.hex"
      --JsonRpc.EngineHost=0.0.0.0
      --JsonRpc.EnginePort=8551
      --JsonRpc.Host=0.0.0.0
      --JsonRpc.Port=8545
      --Sync.SnapSync=true
      --HealthChecks.Enabled=true
      --Metrics.Enabled=true
      --Metrics.ExposePort=8008
    networks: [dvnode]
    volumes:
      - ../data/nethermind:/nethermind/data
      - ../jwt:/root/jwt


  #  _           _           _
  # | | ___   __| | ___  ___| |_ __ _ _ __
  # | |/ _ \ / _` |/ _ \/ __| __/ _` | '__|
  # | | (_) | (_| |  __/\__ \ || (_| | |
  # |_|\___/ \__,_|\___||___/\__\__,_|_|

  lodestar_bn:
    image: chainsafe/lodestar:${LODESTAR_VERSION:-v1.8.0}
    ports:
      - ${LODESTAR_PORT_P2P:-9000}:9000/tcp   # P2P TCP
      - ${LODESTAR_PORT_P2P:-9000}:9000/udp   # P2P UDP
    command: |
      beacon
      --network=${NETWORK:-goerli}
      --checkpointSyncUrl=${LODESTAR_CHECKPOINT_SYNC_URL:-https://checkpoint-sync.goerli.ethpandaops.io}
      --execution.urls=http://nethermind:8551
      --jwt-secret=/opt/jwt/jwt.hex
      --dataDir=/opt/data
      --builder
      --builder.urls=http://mev-boost:18550
      --rest
      --rest.address=0.0.0.0
      --rest.port=9596
      --rest.cors=*
      --metrics
      --metrics.address=0.0.0.0
      --metrics.port=8008
    networks: [dvnode]
    volumes:
      - ../data/lodestar_bn:/opt/data
      - ../jwt:/opt/jwt
    restart: unless-stopped

  #       _
  #   ___| |__   __ _ _ __ ___  _ __
  #  / __| '_ \ / _` | '__/ _ \| '_ \
  # | (__| | | | (_| | | | (_) | | | |
  #  \___|_| |_|\__,_|_|  \___/|_| |_|

  charon:
    image: obolnetwork/charon:${CHARON_VERSION:-v0.15.0}
    environment:
      - CHARON_BEACON_NODE_ENDPOINTS=${CHARON_BEACON_NODE_ENDPOINTS:-http://lodestar_bn:9596}
      - CHARON_LOG_LEVEL=${CHARON_LOG_LEVEL:-info}
      - CHARON_LOG_FORMAT=${CHARON_LOG_FORMAT:-console}
      - CHARON_P2P_RELAYS=${CHARON_P2P_RELAYS:-https://0.relay.obol.tech}
      - CHARON_P2P_EXTERNAL_HOSTNAME=${CHARON_P2P_EXTERNAL_HOSTNAME:-} # Empty default required to avoid warnings.
      - CHARON_P2P_TCP_ADDRESS=0.0.0.0:${CHARON_PORT_P2P_TCP:-3610}
      - CHARON_VALIDATOR_API_ADDRESS=0.0.0.0:3600
      - CHARON_MONITORING_ADDRESS=0.0.0.0:3620
    ports:
      - ${CHARON_PORT_P2P_TCP:-3610}:${CHARON_PORT_P2P_TCP:-3610}/tcp # P2P TCP libp2p
    networks: [dvnode]
    volumes:
      - ../.charon:/opt/charon/.charon
    restart: unless-stopped
    healthcheck:
      test: wget -qO- http://localhost:3620/readyz

  #  _       _
  # | |_ ___| | ___   _
  # | __/ _ \ |/ / | | |
  # | ||  __/   <| |_| |
  #  \__\___|_|\_\\__,_|

  teku_vc:
    image: consensys/teku:${TEKU_VERSION:-23.5.0}
    depends_on: [ charon ]
    networks: [dvnode]
    command: |
      validator-client
      --beacon-node-api-endpoint="http://charon:3600"
      --data-base-path="/opt/data"
      --metrics-enabled=true
      --metrics-host-allowlist="*"
      --metrics-interface="0.0.0.0"
      --metrics-port="8008"
      --network="auto"
      --validator-keys="/opt/charon/validator_keys:/opt/charon/validator_keys"
      --validators-keystore-locking-enabled=false
      --validators-graffiti="Obol Distributed Validator"
      --validators-proposer-default-fee-recipient="0x0000000000000000000000000000000000000000"
    volumes:
      - ../.charon/validator_keys:/opt/charon/validator_keys
      - ../data/teku_vc:/opt/data
    restart: unless-stopped

  #                        _ _             _
  #  _ __ ___   ___  _ __ (_) |_ ___  _ __(_)_ __   __ _
  # | '_ ` _ \ / _ \| '_ \| | __/ _ \| '__| | '_ \ / _` |
  # | | | | | | (_) | | | | | || (_) | |  | | | | | (_| |
  # |_| |_| |_|\___/|_| |_|_|\__\___/|_|  |_|_| |_|\__, |
  #                                                |___/

  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-v2.43.0}
    user: ":"
    networks: [dvnode]
    volumes:
      - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../data/prometheus:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-9.4.7}
    user: ":"
    ports:
      - ${MONITORING_PORT_GRAFANA:-3000}:3000
    networks: [dvnode]
    volumes:
      - ../grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ../grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/datasource.yml
      - ../grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ../grafana/dashboards:/etc/dashboards
      - ../data/grafana:/var/lib/grafana
    restart: unless-stopped

networks:
  dvnode:
