version: "3.8"

services:
  #             _   _
  #   __ _  ___| |_| |__
  #  / _` |/ _ \ __| '_ \
  # | (_| |  __/ |_| | | |
  #  \__, |\___|\__|_| |_|
  #  |___/

  geth:
    image: ethereum/client-go:v1.10.21
    ports:
      - 30303:30303/tcp
      - 30303:30303/udp
      - 8545:8545
      - 8551:8551/tcp
      - 8551:8551/udp
    command: |
      --goerli
      --http
      --http.addr=0.0.0.0
      --http.port=8545
      --http.vhosts="*"
      --http.api="db,eth,net,engine,rpc,web3"
      --authrpc.jwtsecret="/root/jwt/jwt.hex"
      --authrpc.addr=0.0.0.0
      --authrpc.port=8551
      --authrpc.vhosts="*"
    networks: [dvnode]
    volumes:
      - ./data/geth:/root/.ethereum
      - ./jwt:/root/jwt
    restart: on-failure

  #  _ _       _     _   _
  # | (_) __ _| |__ | |_| |__   ___  _   _ ___  ___
  # | | |/ _` | '_ \| __| '_ \ / _ \| | | / __|/ _ \
  # | | | (_| | | | | |_| | | | (_) | |_| \__ \  __/
  # |_|_|\__, |_| |_|\__|_| |_|\___/ \__,_|___/\___|
  #      |___/

  lighthouse:
    image: sigp/lighthouse:v2.5.1
    depends_on:
      - geth
    ports:
      - 9000:9000/tcp
      - 9000:9000/udp
      - 5052:5052
    command: |
      lighthouse bn
      --network=goerli
      --purge-db
      --checkpoint-sync-url=https://goerli.checkpoint-sync.ethdevops.io
      --execution-endpoint=http://geth:8551
      --execution-jwt=/opt/jwt/jwt.hex
      --http
      --http-address=0.0.0.0
      --http-port=5052
      --metrics
      --metrics-address=0.0.0.0
      --metrics-port=5054
      --metrics-allow-origin="*"
    networks: [dvnode]
    volumes:
      - ./data/lighthouse:/opt/app/beacon
      - ./jwt:/opt/jwt
    restart: on-failure

  #       _
  #   ___| |__   __ _ _ __ ___  _ __
  #  / __| '_ \ / _` | '__/ _ \| '_ \
  # | (__| | | | (_| | | | (_) | | | |
  #  \___|_| |_|\__,_|_|  \___/|_| |_|

  charon:
    # Pegged charon version (update this for each release).
    image: obolnetwork/charon:152ba99
    depends_on:
      - lighthouse
    environment:
      CHARON_BEACON_NODE_ENDPOINTS: http://lighthouse:5052
      CHARON_JAEGER_ADDRESS: jaeger:6831
      CHARON_VALIDATOR_API_ADDRESS: 0.0.0.0:3600
      CHARON_P2P_TCP_ADDRESS: 0.0.0.0:3610
      CHARON_MONITORING_ADDRESS: 0.0.0.0:3620
      CHARON_P2P_UDP_ADDRESS: 0.0.0.0:3630
      CHARON_P2P_BOOTNODE_RELAY: "true"
      CHARON_LOG_LEVEL: info
      CHARON_JAEGER_SERVICE: charon
      CHARON_P2P_EXTERNAL_HOSTNAME: charon
    ports:
      - 3600:3600/tcp # Validator API
      - 3610:3610/tcp # Libp2p
      - 3620:3620/tcp # Monitoring
      - 3630:3630/udp # Discv5
    networks: [dvnode]
    volumes:
      - .charon:/opt/charon/.charon
    restart: on-failure
    healthcheck:
      test: wget -qO- http://localhost:3620/readyz

  #  _       _
  # | |_ ___| | ___   _
  # | __/ _ \ |/ / | | |
  # | ||  __/   <| |_| |
  #  \__\___|_|\_\\__,_|

  teku:
    image: consensys/teku:22.8.0
    depends_on:
      - charon
      - lighthouse
    ports:
      - 8008:8008
    command: |
      validator-client
      --config-file "/opt/charon/teku/teku_config.yaml"
    networks: [dvnode]
    volumes:
      - ".charon/validator_keys:/opt/charon/validator_keys"
      - "./config:/opt/charon/teku"
    restart: on-failure

  #                        _ _             _
  #  _ __ ___   ___  _ __ (_) |_ ___  _ __(_)_ __   __ _
  # | '_ ` _ \ / _ \| '_ \| | __/ _ \| '__| | '_ \ / _` |
  # | | | | | | (_) | | | | | || (_) | |  | | | | | (_| |
  # |_| |_| |_|\___/|_| |_|_|\__\___/|_|  |_|_| |_|\__, |
  #                                                |___/

  prometheus:
    image: prom/prometheus:v2.37.0
    user: ":"
    ports:
      - "9090:9090"
    networks: [dvnode]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus

  grafana:
    image: grafana/grafana:9.0.7
    user: ":"
    depends_on: [prometheus]
    ports:
      - "3000:3000"
    networks: [dvnode]
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/datasource.yml
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/dashboards:/etc/dashboards
      - ./data/grafana:/var/lib/grafana

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks: [dvnode]

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
    networks: [dvnode]

networks:
  dvnode:
